name: Build iOS

on: [push, pull_request]
jobs:
  build_ios:
    runs-on: macos-latest
    steps:
    - name: Install dpkg
      run: |
        brew install dpkg
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set SHORT_HASH
      run: echo "::set-output name=VALUE::${LONG_HASH:0:8}"
      id: short_hash
      env:
        LONG_HASH: ${{ github.sha }}
    - name: Generate CMake Project
      run: |
        mkdir build
        cd build
        cmake .. -G"Xcode" -DCMAKE_TOOLCHAIN_FILE=../deps/Dependencies/cmake-ios/ios.cmake -DTARGET_IOS=ON -DBUILD_PSFPLAYER=ON -DBUILD_LIBRETRO_CORE=yes
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
        codesign -s "-" Source/ui_ios/Release-iphoneos/Play.app
    - name: Generate IPA
      run: |
        cd installer_ios
        ./build_ipa.sh
    - name: Generate Cydia Package
      run: |
        cd installer_ios
        ./build_cydia.sh
    - name: Upload a Build Artifact ipa/deb/bz2
      uses: actions/upload-artifact@v2
      with:
        name: Play_iOS
        path: |
          installer_ios/Play.ipa
          installer_ios/Play.deb
          installer_ios/Packages.bz2
    - name: Upload a Build Artifact libretro
      uses: actions/upload-artifact@v2
      with:
        name: Play_iOS_libretro
        path: build/Source/ui_libretro/Release-iphoneos/play_libretro_ios.dylib
    - name: Upload to S3
      if: ${{ github.event_name != 'pull_request'}}
      run: |
        aws s3 cp installer_ios/Play.ipa s3://playbuilds/$SHORT_HASH/Play.ipa --acl public-read
        aws s3 cp installer_ios/Play.deb s3://playbuilds/$SHORT_HASH/Play.deb --acl public-read
        aws s3 cp installer_ios/Packages.bz2 s3://playbuilds/$SHORT_HASH/Packages.bz2 --acl public-read
        aws s3 cp build/Source/ui_libretro/Release-iphoneos/play_libretro_ios.dylib s3://playbuilds/$SHORT_HASH/play_libretro_ios.dylib --acl public-read
      env:
        SHORT_HASH: ${{ steps.short_hash.outputs.VALUE }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-2'
