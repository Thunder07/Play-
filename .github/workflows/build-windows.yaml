name: Build Windows

on: [push, pull_request]
env:
  VULKAN_SDK_VERSION: '1.2.131.1'
  QT_VERSION: '5.15.2'
jobs:
  build_windows:
    strategy:
      matrix:
        build-type: ['Visual Studio 16 2019']
        target-platform: ['x64', 'Win32']
        include: 
          - target-platform: 'x64'
            qt-arch: 'win64_msvc2019_64'
          - target-platform: 'Win32'
            qt-arch: 'win32_msvc2019'
    runs-on: windows-latest
    steps:
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install Vulkan SDK
      run: |
        cd $RUNNER_WORKSPACE
        curl -L --silent --show-error --output VulkanSDK.exe https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe?Human=true
        .\VulkanSDK.exe /S
        echo "VULKAN_SDK=C:\VulkanSDK\${{ env.VULKAN_SDK_VERSION }}" >> $GITHUB_ENV

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ env.QT_VERSION }}
        arch: ${{ matrix.qt-arch }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set SHORT_HASH
      run: echo "::set-output name=VALUE::${LONG_HASH:0:8}"
      id: short_hash
      env:
        LONG_HASH: ${{ github.sha }}
    - name: Generate CMake Project
      run: |
        mkdir build
        cd build
        cmake .. -G"${{ env.BUILD_TYPE }}" -A ${{ env.TARGET_PLATFORM }} -T v141_xp -DUSE_QT=on -DBUILD_LIBRETRO_CORE=yes
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
        TARGET_PLATFORM: ${{ matrix.target-platform }}

    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    - name: Run Tests
      run: |
        cd build
        ctest -C Release